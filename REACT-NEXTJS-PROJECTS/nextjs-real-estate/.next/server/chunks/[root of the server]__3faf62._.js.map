{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///Users/masynctech/Desktop/programming/project-guides/NEXTJS-PROJECTS/real-estate/lib/db.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst MONGODB_URI = \"mongodb://localhost:27017/real-estate-v4\";\n\nif (!MONGODB_URI) {\n  throw new Error(\n    \"Please define the MONGODB_URI environment variable inside .env\"\n  );\n}\n\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function connectDB() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n\n  if (!cached.promise) {\n    const opts = {\n      bufferCommands: false,\n    };\n\n    cached.promise = mongoose.connect(MONGODB_URI, opts).then((mongoose) => {\n      return mongoose;\n    });\n  }\n\n  try {\n    cached.conn = await cached.promise;\n  } catch (e) {\n    cached.promise = null;\n    throw e;\n  }\n\n  return cached.conn;\n}\n\nexport default connectDB;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc;AAEpB,uCAAkB;;AAIlB;AAEA,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,MAAM,IAAI,CAAC,CAAC;YACzD,OAAO;QACT;IACF;IAEA,IAAI;QACF,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACpC,EAAE,OAAO,GAAG;QACV,OAAO,OAAO,GAAG;QACjB,MAAM;IACR;IAEA,OAAO,OAAO,IAAI;AACpB;uCAEe"}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///Users/masynctech/Desktop/programming/project-guides/NEXTJS-PROJECTS/real-estate/models/user.js"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst userSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, 'Please provide your name'],\n    trim: true\n  },\n  email: {\n    type: String,\n    required: [true, 'Please provide your email'],\n    unique: true,\n    lowercase: true,\n    match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please provide a valid email']\n  },\n  password: {\n    type: String,\n    required: [true, 'Please provide a password'],\n    minlength: [6, 'Password must be at least 6 characters long'],\n    select: false\n  },\n  role: {\n    type: String,\n    enum: ['user', 'admin'],\n    default: 'user'\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  }\n}, {\n  toJSON: { \n    transform: function(doc, ret) {\n      ret._id = ret._id.toString();\n      return ret;\n    }\n  }\n});\n\n// Ensure the model is registered only once\nconst User = mongoose.models.User || mongoose.model('User', userSchema);\n\nexport default User;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACrC,MAAM;QACJ,MAAM;QACN,UAAU;YAAC;YAAM;SAA2B;QAC5C,MAAM;IACR;IACA,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAA4B;QAC7C,QAAQ;QACR,WAAW;QACX,OAAO;YAAC;YAAiD;SAA+B;IAC1F;IACA,UAAU;QACR,MAAM;QACN,UAAU;YAAC;YAAM;SAA4B;QAC7C,WAAW;YAAC;YAAG;SAA8C;QAC7D,QAAQ;IACV;IACA,MAAM;QACJ,MAAM;QACN,MAAM;YAAC;YAAQ;SAAQ;QACvB,SAAS;IACX;IACA,WAAW;QACT,MAAM;QACN,SAAS,KAAK,GAAG;IACnB;AACF,GAAG;IACD,QAAQ;QACN,WAAW,SAAS,GAAG,EAAE,GAAG;YAC1B,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,QAAQ;YAC1B,OAAO;QACT;IACF;AACF;AAEA,2CAA2C;AAC3C,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ;uCAE7C"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["file:///Users/masynctech/Desktop/programming/project-guides/NEXTJS-PROJECTS/real-estate/app/api/auth/register/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport bcrypt from 'bcryptjs';\nimport jwt from 'jsonwebtoken';\nimport connectDB from '@/lib/db';\nimport User from '@/models/user';\n\nexport async function POST(request) {\n  try {\n    await connectDB();\n    \n    const { name, email, password } = await request.json();\n\n    // Validate input\n    if (!name || !email || !password) {\n      return NextResponse.json(\n        { success: false, error: 'Please provide all required fields' },\n        { status: 400 }\n      );\n    }\n\n    const lowercaseEmail = email.toLowerCase();\n\n    // Check if user exists\n    const existingUser = await User.findOne({ email: lowercaseEmail });\n    if (existingUser) {\n      return NextResponse.json(\n        { success: false, error: 'User already exists' },\n        { status: 400 }\n      );\n    }\n\n    // Hash password\n    const salt = await bcrypt.genSalt(10);\n    const hashedPassword = await bcrypt.hash(password, salt);\n\n    // Create user\n    const user = await User.create({\n      name,\n      email: lowercaseEmail,\n      password: hashedPassword,\n      role: 'user'\n    });\n\n    // Create token\n    const token = jwt.sign(\n      { \n        userId: user._id.toString(),\n        email: user.email,\n        role: user.role \n      },\n      process.env.JWT_SECRET,\n      { expiresIn: '30d' }\n    );\n\n    // Create the response\n    const response = NextResponse.json({\n      success: true,\n      token,\n      user: {\n        id: user._id.toString(),\n        name: user.name,\n        email: user.email,\n        role: user.role\n      }\n    });\n\n    // Set cookie\n    response.cookies.set('token', token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      sameSite: 'strict',\n      maxAge: 30 * 24 * 60 * 60 // 30 days\n    });\n\n    return response;\n  } catch (error) {\n    console.error('Registration error:', error);\n    return NextResponse.json(\n      { success: false, error: 'Error creating user' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,MAAM,CAAA,GAAA,2GAAA,CAAA,UAAS,AAAD;QAEd,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QAEpD,iBAAiB;QACjB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU;YAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAAqC,GAC9D;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,iBAAiB,MAAM,WAAW;QAExC,uBAAuB;QACvB,MAAM,eAAe,MAAM,gHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE,OAAO;QAAe;QAChE,IAAI,cAAc;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAAsB,GAC/C;gBAAE,QAAQ;YAAI;QAElB;QAEA,gBAAgB;QAChB,MAAM,OAAO,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC;QAClC,MAAM,iBAAiB,MAAM,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;QAEnD,cAAc;QACd,MAAM,OAAO,MAAM,gHAAA,CAAA,UAAI,CAAC,MAAM,CAAC;YAC7B;YACA,OAAO;YACP,UAAU;YACV,MAAM;QACR;QAEA,eAAe;QACf,MAAM,QAAQ,uIAAA,CAAA,UAAG,CAAC,IAAI,CACpB;YACE,QAAQ,KAAK,GAAG,CAAC,QAAQ;YACzB,OAAO,KAAK,KAAK;YACjB,MAAM,KAAK,IAAI;QACjB,GACA,QAAQ,GAAG,CAAC,UAAU,EACtB;YAAE,WAAW;QAAM;QAGrB,sBAAsB;QACtB,MAAM,WAAW,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACjC,SAAS;YACT;YACA,MAAM;gBACJ,IAAI,KAAK,GAAG,CAAC,QAAQ;gBACrB,MAAM,KAAK,IAAI;gBACf,OAAO,KAAK,KAAK;gBACjB,MAAM,KAAK,IAAI;YACjB;QACF;QAEA,aAAa;QACb,SAAS,OAAO,CAAC,GAAG,CAAC,SAAS,OAAO;YACnC,UAAU;YACV,QAAQ,oDAAyB;YACjC,UAAU;YACV,QAAQ,KAAK,KAAK,KAAK,GAAG,UAAU;QACtC;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAAsB,GAC/C;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}