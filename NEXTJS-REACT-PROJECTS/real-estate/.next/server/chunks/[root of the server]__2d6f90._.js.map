{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///Users/masynctech/Desktop/programming/project-guides/NEXTJS-PROJECTS/real-estate/lib/db.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst MONGODB_URI = \"mongodb://localhost:27017/real-estate-v4\";\n\nif (!MONGODB_URI) {\n  throw new Error(\n    \"Please define the MONGODB_URI environment variable inside .env\"\n  );\n}\n\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function connectDB() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n\n  if (!cached.promise) {\n    const opts = {\n      bufferCommands: false,\n    };\n\n    cached.promise = mongoose.connect(MONGODB_URI, opts).then((mongoose) => {\n      return mongoose;\n    });\n  }\n\n  try {\n    cached.conn = await cached.promise;\n  } catch (e) {\n    cached.promise = null;\n    throw e;\n  }\n\n  return cached.conn;\n}\n\nexport default connectDB;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc;AAEpB,uCAAkB;;AAIlB;AAEA,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,MAAM,IAAI,CAAC,CAAC;YACzD,OAAO;QACT;IACF;IAEA,IAAI;QACF,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACpC,EAAE,OAAO,GAAG;QACV,OAAO,OAAO,GAAG;QACjB,MAAM;IACR;IAEA,OAAO,OAAO,IAAI;AACpB;uCAEe"}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///Users/masynctech/Desktop/programming/project-guides/NEXTJS-PROJECTS/real-estate/models/user.js"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst userSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, 'Please provide your name'],\n    trim: true\n  },\n  email: {\n    type: String,\n    required: [true, 'Please provide your email'],\n    unique: true,\n    lowercase: true,\n    match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please provide a valid email']\n  },\n  password: {\n    type: String,\n    required: [true, 'Please provide a password'],\n    minlength: [6, 'Password must be at least 6 characters long'],\n    select: false\n  },\n  role: {\n    type: String,\n    enum: ['user', 'admin'],\n    default: 'user'\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  }\n}, {\n  toJSON: { \n    transform: function(doc, ret) {\n      ret._id = ret._id.toString();\n      return ret;\n    }\n  }\n});\n\n// Ensure the model is registered only once\nconst User = mongoose.models.User || mongoose.model('User', userSchema);\n\nexport default User;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACrC,MAAM;QACJ,MAAM;QACN,UAAU;YAAC;YAAM;SAA2B;QAC5C,MAAM;IACR;IACA,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAA4B;QAC7C,QAAQ;QACR,WAAW;QACX,OAAO;YAAC;YAAiD;SAA+B;IAC1F;IACA,UAAU;QACR,MAAM;QACN,UAAU;YAAC;YAAM;SAA4B;QAC7C,WAAW;YAAC;YAAG;SAA8C;QAC7D,QAAQ;IACV;IACA,MAAM;QACJ,MAAM;QACN,MAAM;YAAC;YAAQ;SAAQ;QACvB,SAAS;IACX;IACA,WAAW;QACT,MAAM;QACN,SAAS,KAAK,GAAG;IACnB;AACF,GAAG;IACD,QAAQ;QACN,WAAW,SAAS,GAAG,EAAE,GAAG;YAC1B,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,QAAQ;YAC1B,OAAO;QACT;IACF;AACF;AAEA,2CAA2C;AAC3C,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ;uCAE7C"}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///Users/masynctech/Desktop/programming/project-guides/NEXTJS-PROJECTS/real-estate/app/api/auth/%5B...nextauth%5D/route.js"],"sourcesContent":["import NextAuth from 'next-auth';\nimport CredentialsProvider from 'next-auth/providers/credentials';\nimport connectDB from '@/lib/db';\nimport User from '@/models/user';\nimport bcrypt from 'bcryptjs';\n\nconst handler = NextAuth({\n  providers: [\n    CredentialsProvider({\n      name: 'Credentials',\n      credentials: {\n        email: { label: \"Email\", type: \"email\" },\n        password: { label: \"Password\", type: \"password\" }\n      },\n      async authorize(credentials) {\n        try {\n          await connectDB();\n          \n          if (!credentials?.email || !credentials?.password) {\n            throw new Error('Email and password are required');\n          }\n\n          const lowercaseEmail = credentials.email.toLowerCase();\n          console.log('Login attempt for:', lowercaseEmail);\n\n          // Find user\n          const user = await User.findOne({ email: lowercaseEmail }).select('+password');\n          \n          if (!user) {\n            console.log('No user found with email:', lowercaseEmail);\n            throw new Error('Invalid credentials');\n          }\n\n          console.log('Found user:', {\n            id: user._id.toString(),\n            email: user.email\n          });\n\n          // Compare passwords\n          const isValid = await bcrypt.compare(\n            String(credentials.password),\n            String(user.password)\n          );\n\n          if (!isValid) {\n            console.log('Password verification failed for:', lowercaseEmail);\n            throw new Error('Invalid credentials');\n          }\n\n          console.log('Login successful for:', lowercaseEmail);\n\n          // Return user without password\n          return {\n            id: user._id.toString(),\n            email: user.email,\n            name: user.name,\n            role: user.role\n          };\n\n        } catch (error) {\n          console.error('Auth error:', error.message);\n          throw new Error('Invalid credentials');\n        }\n      }\n    })\n  ],\n  callbacks: {\n    async jwt({ token, user }) {\n      if (user) {\n        token.id = user.id;\n        token.email = user.email;\n        token.name = user.name;\n        token.role = user.role;\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      if (token) {\n        session.user.id = token.id;\n        session.user.email = token.email;\n        session.user.name = token.name;\n        session.user.role = token.role;\n      }\n      return session;\n    }\n  },\n  pages: {\n    signIn: '/login',\n  },\n  session: {\n    strategy: 'jwt',\n    maxAge: 30 * 24 * 60 * 60, // 30 days\n  },\n  debug: true\n});\n\nexport { handler as GET, handler as POST };\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE;IACvB,WAAW;QACT,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAQ;gBACvC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI;oBACF,MAAM,CAAA,GAAA,2GAAA,CAAA,UAAS,AAAD;oBAEd,IAAI,CAAC,aAAa,SAAS,CAAC,aAAa,UAAU;wBACjD,MAAM,IAAI,MAAM;oBAClB;oBAEA,MAAM,iBAAiB,YAAY,KAAK,CAAC,WAAW;oBACpD,QAAQ,GAAG,CAAC,sBAAsB;oBAElC,YAAY;oBACZ,MAAM,OAAO,MAAM,gHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;wBAAE,OAAO;oBAAe,GAAG,MAAM,CAAC;oBAElE,IAAI,CAAC,MAAM;wBACT,QAAQ,GAAG,CAAC,6BAA6B;wBACzC,MAAM,IAAI,MAAM;oBAClB;oBAEA,QAAQ,GAAG,CAAC,eAAe;wBACzB,IAAI,KAAK,GAAG,CAAC,QAAQ;wBACrB,OAAO,KAAK,KAAK;oBACnB;oBAEA,oBAAoB;oBACpB,MAAM,UAAU,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAClC,OAAO,YAAY,QAAQ,GAC3B,OAAO,KAAK,QAAQ;oBAGtB,IAAI,CAAC,SAAS;wBACZ,QAAQ,GAAG,CAAC,qCAAqC;wBACjD,MAAM,IAAI,MAAM;oBAClB;oBAEA,QAAQ,GAAG,CAAC,yBAAyB;oBAErC,+BAA+B;oBAC/B,OAAO;wBACL,IAAI,KAAK,GAAG,CAAC,QAAQ;wBACrB,OAAO,KAAK,KAAK;wBACjB,MAAM,KAAK,IAAI;wBACf,MAAM,KAAK,IAAI;oBACjB;gBAEF,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,eAAe,MAAM,OAAO;oBAC1C,MAAM,IAAI,MAAM;gBAClB;YACF;QACF;KACD;IACD,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,EAAE,GAAG,KAAK,EAAE;gBAClB,MAAM,KAAK,GAAG,KAAK,KAAK;gBACxB,MAAM,IAAI,GAAG,KAAK,IAAI;gBACtB,MAAM,IAAI,GAAG,KAAK,IAAI;YACxB;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,OAAO;gBACT,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE;gBAC1B,QAAQ,IAAI,CAAC,KAAK,GAAG,MAAM,KAAK;gBAChC,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;gBAC9B,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;YAChC;YACA,OAAO;QACT;IACF;IACA,OAAO;QACL,QAAQ;IACV;IACA,SAAS;QACP,UAAU;QACV,QAAQ,KAAK,KAAK,KAAK;IACzB;IACA,OAAO;AACT"}},
    {"offset": {"line": 353, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}