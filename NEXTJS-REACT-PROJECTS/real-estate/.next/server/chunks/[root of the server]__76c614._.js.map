{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/masynctech/Desktop/real-estate/lib/db.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst MONGODB_URI = \"mongodb://localhost:27017/real-estate-v4\";\n\nif (!MONGODB_URI) {\n  throw new Error(\n    \"Please define the MONGODB_URI environment variable inside .env\"\n  );\n}\n\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function connectDB() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n\n  if (!cached.promise) {\n    const opts = {\n      bufferCommands: false,\n    };\n\n    cached.promise = mongoose.connect(MONGODB_URI, opts).then((mongoose) => {\n      return mongoose;\n    });\n  }\n\n  try {\n    cached.conn = await cached.promise;\n  } catch (e) {\n    cached.promise = null;\n    throw e;\n  }\n\n  return cached.conn;\n}\n\nexport default connectDB;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc;AAEpB,uCAAkB;;AAIlB;AAEA,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,MAAM,IAAI,CAAC,CAAC;YACzD,OAAO;QACT;IACF;IAEA,IAAI;QACF,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACpC,EAAE,OAAO,GAAG;QACV,OAAO,OAAO,GAAG;QACjB,MAAM;IACR;IAEA,OAAO,OAAO,IAAI;AACpB;uCAEe"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///Users/masynctech/Desktop/real-estate/app/api/listings/my-listings/route.js"],"sourcesContent":["import { getServerSession } from 'next-auth';\nimport { authOptions } from '../../auth/[...nextauth]/route';\nimport { connectDB } from '@/lib/db';\nimport Property from '@/models/Property';\n\nexport async function GET() {\n  try {\n    const session = await getServerSession(authOptions);\n    \n    if (!session) {\n      return new Response(JSON.stringify({ error: 'Unauthorized' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' },\n      });\n    }\n\n    await connectDB();\n    \n    const listings = await Property.find({ owner: session.user.id })\n      .sort({ createdAt: -1 });\n\n    return new Response(JSON.stringify(listings), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  } catch (error) {\n    console.error('Error fetching listings:', error);\n    return new Response(JSON.stringify({ error: 'Internal Server Error' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;;;;;;;;;;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,UAAU,MAAM,iBAAiB;QAEvC,IAAI,CAAC,SAAS;YACZ,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;gBAAE,OAAO;YAAe,IAAI;gBAC7D,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;YAChD;QACF;QAEA,MAAM,CAAA,GAAA,2GAAA,CAAA,YAAS,AAAD;QAEd,MAAM,WAAW,MAAM,SAAS,IAAI,CAAC;YAAE,OAAO,QAAQ,IAAI,CAAC,EAAE;QAAC,GAC3D,IAAI,CAAC;YAAE,WAAW,CAAC;QAAE;QAExB,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC,WAAW;YAC5C,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;QAChD;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,OAAO;QAAwB,IAAI;YACtE,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;QAChD;IACF;AACF"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}