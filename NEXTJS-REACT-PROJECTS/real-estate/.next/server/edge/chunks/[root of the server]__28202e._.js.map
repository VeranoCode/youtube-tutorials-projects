{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/middleware.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\n\nexport async function middleware(request) {\n  // Get the pathname of the request (e.g. /dashboard)\n  const path = request.nextUrl.pathname;\n\n  // Define protected routes\n  const protectedRoutes = [\n    \"/dashboard\",\n    \"/api/enquiries\",\n    \"/properties/add\",\n    \"/properties/:id/edit\",\n  ];\n\n  // Public routes that should bypass auth\n  const publicRoutes = [\"/properties\", \"/api/properties\"];\n\n  // Check if the path matches any protected route\n  const isProtectedRoute = protectedRoutes.some((route) =>\n    path.startsWith(route)\n  );\n\n  // Allow public routes to bypass auth\n  const isPublicRoute = publicRoutes.some((route) => path.startsWith(route));\n\n  if (isPublicRoute) {\n    return NextResponse.next();\n  }\n\n  if (isProtectedRoute) {\n    const token = request.cookies.get(\"token\")?.value;\n\n    if (!token) {\n      return NextResponse.redirect(new URL(\"/login\", request.url));\n    }\n\n    try {\n      // Add token to request headers\n      const requestHeaders = new Headers(request.headers);\n      requestHeaders.set(\"Authorization\", `Bearer ${token}`);\n\n      return NextResponse.next({\n        request: {\n          headers: requestHeaders,\n        },\n      });\n    } catch (error) {\n      return NextResponse.redirect(new URL(\"/login\", request.url));\n    }\n  }\n\n  return NextResponse.next();\n}\n\n// Update the matcher to include all protected paths\nexport const config = {\n  matcher: [\n    \"/dashboard/:path*\",\n    \"/api/enquiries/:path*\",\n    \"/properties/add\",\n    \"/properties/:id/edit\",\n  ],\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAEO,eAAe,WAAW,OAAO;IACtC,oDAAoD;IACpD,MAAM,OAAO,QAAQ,OAAO,CAAC,QAAQ;IAErC,0BAA0B;IAC1B,MAAM,kBAAkB;QACtB;QACA;QACA;QACA;KACD;IAED,wCAAwC;IACxC,MAAM,eAAe;QAAC;QAAe;KAAkB;IAEvD,gDAAgD;IAChD,MAAM,mBAAmB,gBAAgB,IAAI,CAAC,CAAC,QAC7C,KAAK,UAAU,CAAC;IAGlB,qCAAqC;IACrC,MAAM,gBAAgB,aAAa,IAAI,CAAC,CAAC,QAAU,KAAK,UAAU,CAAC;IAEnE,IAAI,eAAe;QACjB,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,IAAI,kBAAkB;QACpB,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,UAAU;QAE5C,IAAI,CAAC,OAAO;YACV,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;QAC5D;QAEA,IAAI;YACF,+BAA+B;YAC/B,MAAM,iBAAiB,IAAI,QAAQ,QAAQ,OAAO;YAClD,eAAe,GAAG,CAAC,iBAAiB,CAAC,OAAO,EAAE,OAAO;YAErD,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;oBACP,SAAS;gBACX;YACF;QACF,EAAE,OAAO,OAAO;YACd,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;QAC5D;IACF;IAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QACP;QACA;QACA;QACA;KACD;AACH"}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}