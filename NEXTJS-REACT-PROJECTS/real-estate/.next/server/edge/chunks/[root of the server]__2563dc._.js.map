{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/lib/jwt.js"],"sourcesContent":["import jwt from 'jsonwebtoken';\n\nconst JWT_SECRET = process.env.JWT_SECRET || '%021830283';\n\nif (!JWT_SECRET) {\n  throw new Error('Please define the JWT_SECRET environment variable inside .env');\n}\n\nexport const signToken = (payload) => {\n  try {\n    return jwt.sign(payload, JWT_SECRET, {\n      expiresIn: '30d'\n    });\n  } catch (error) {\n    console.error('Error signing token:', error);\n    return null;\n  }\n};\n\nexport const verifyToken = (token) => {\n  try {\n    return jwt.verify(token, JWT_SECRET);\n  } catch (error) {\n    console.error('Error verifying token:', error);\n    return null;\n  }\n};\n\nexport const getTokenFromHeader = (req) => {\n  try {\n    if (\n      req.headers.authorization &&\n      req.headers.authorization.startsWith('Bearer')\n    ) {\n      return req.headers.authorization.split(' ')[1];\n    }\n    return null;\n  } catch (error) {\n    console.error('Error getting token from header:', error);\n    return null;\n  }\n};\n"],"names":[],"mappings":";;;;;AAAA;;AAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU,IAAI;AAE7C,uCAAiB;;AAEjB;AAEO,MAAM,YAAY,CAAC;IACxB,IAAI;QACF,OAAO,qIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,SAAS,YAAY;YACnC,WAAW;QACb;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO;IACT;AACF;AAEO,MAAM,cAAc,CAAC;IAC1B,IAAI;QACF,OAAO,qIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO;IACT;AACF;AAEO,MAAM,qBAAqB,CAAC;IACjC,IAAI;QACF,IACE,IAAI,OAAO,CAAC,aAAa,IACzB,IAAI,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,WACrC;YACA,OAAO,IAAI,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;QAChD;QACA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,OAAO;IACT;AACF"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/middleware.js"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { verifyToken } from './lib/jwt';\n\nexport async function middleware(request) {\n  // Get the pathname of the request (e.g. /dashboard)\n  const path = request.nextUrl.pathname;\n\n  // Define protected routes\n  const protectedRoutes = ['/dashboard'];\n\n  // Check if the path matches any protected route\n  const isProtectedRoute = protectedRoutes.some(route => \n    path.startsWith(route)\n  );\n\n  if (isProtectedRoute) {\n    // Get the token from cookies\n    const token = request.cookies.get('token')?.value;\n    \n    if (!token) {\n      // Redirect to login if there's no token\n      const loginUrl = new URL('/login', request.url);\n      loginUrl.searchParams.set('from', request.nextUrl.pathname);\n      return NextResponse.redirect(loginUrl);\n    }\n\n    try {\n      // Verify the token\n      const decoded = verifyToken(token);\n      if (!decoded) {\n        throw new Error('Invalid token');\n      }\n\n      // Continue with the request since token is valid\n      return NextResponse.next();\n    } catch (error) {\n      console.error('Token verification failed:', error);\n      // Redirect to login if token is invalid\n      const loginUrl = new URL('/login', request.url);\n      loginUrl.searchParams.set('from', request.nextUrl.pathname);\n      return NextResponse.redirect(loginUrl);\n    }\n  }\n\n  // Continue with the request if it's not a protected route\n  return NextResponse.next();\n}\n\n// Update the matcher to include all dashboard routes\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - api (API routes)\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     * - public folder\n     */\n    '/dashboard/:path*',\n  ],\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AADA;;;AAGO,eAAe,WAAW,OAAO;IACtC,oDAAoD;IACpD,MAAM,OAAO,QAAQ,OAAO,CAAC,QAAQ;IAErC,0BAA0B;IAC1B,MAAM,kBAAkB;QAAC;KAAa;IAEtC,gDAAgD;IAChD,MAAM,mBAAmB,gBAAgB,IAAI,CAAC,CAAA,QAC5C,KAAK,UAAU,CAAC;IAGlB,IAAI,kBAAkB;QACpB,6BAA6B;QAC7B,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,UAAU;QAE5C,IAAI,CAAC,OAAO;YACV,wCAAwC;YACxC,MAAM,WAAW,IAAI,IAAI,UAAU,QAAQ,GAAG;YAC9C,SAAS,YAAY,CAAC,GAAG,CAAC,QAAQ,QAAQ,OAAO,CAAC,QAAQ;YAC1D,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;QAC/B;QAEA,IAAI;YACF,mBAAmB;YACnB,MAAM,UAAU,CAAA,GAAA,0GAAA,CAAA,cAAW,AAAD,EAAE;YAC5B,IAAI,CAAC,SAAS;gBACZ,MAAM,IAAI,MAAM;YAClB;YAEA,iDAAiD;YACjD,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;QAC1B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,wCAAwC;YACxC,MAAM,WAAW,IAAI,IAAI,UAAU,QAAQ,GAAG;YAC9C,SAAS,YAAY,CAAC,GAAG,CAAC,QAAQ,QAAQ,OAAO,CAAC,QAAQ;YAC1D,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;QAC/B;IACF;IAEA,0DAA0D;IAC1D,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;;KAOC,GACD;KACD;AACH"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}